require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe RegistrationNumbersController do

  def mock_registration_number(stubs={})
    @mock_registration_number ||= mock_model(RegistrationNumber, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all registration_numbers as @registration_numbers" do
      RegistrationNumber.stub(:all) { [mock_registration_number] }
      get :index
      assigns(:registration_numbers).should eq([mock_registration_number])
    end
  end

  describe "GET show" do
    it "assigns the requested registration_number as @registration_number" do
      RegistrationNumber.stub(:find).with("37") { mock_registration_number }
      get :show, :id => "37"
      assigns(:registration_number).should be(mock_registration_number)
    end
  end

  describe "GET new" do
    it "assigns a new registration_number as @registration_number" do
      RegistrationNumber.stub(:new) { mock_registration_number }
      get :new
      assigns(:registration_number).should be(mock_registration_number)
    end
  end

  describe "GET edit" do
    it "assigns the requested registration_number as @registration_number" do
      RegistrationNumber.stub(:find).with("37") { mock_registration_number }
      get :edit, :id => "37"
      assigns(:registration_number).should be(mock_registration_number)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created registration_number as @registration_number" do
        RegistrationNumber.stub(:new).with({'these' => 'params'}) { mock_registration_number(:save => true) }
        post :create, :registration_number => {'these' => 'params'}
        assigns(:registration_number).should be(mock_registration_number)
      end

      it "redirects to the created registration_number" do
        RegistrationNumber.stub(:new) { mock_registration_number(:save => true) }
        post :create, :registration_number => {}
        response.should redirect_to(registration_number_url(mock_registration_number))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved registration_number as @registration_number" do
        RegistrationNumber.stub(:new).with({'these' => 'params'}) { mock_registration_number(:save => false) }
        post :create, :registration_number => {'these' => 'params'}
        assigns(:registration_number).should be(mock_registration_number)
      end

      it "re-renders the 'new' template" do
        RegistrationNumber.stub(:new) { mock_registration_number(:save => false) }
        post :create, :registration_number => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested registration_number" do
        RegistrationNumber.stub(:find).with("37") { mock_registration_number }
        mock_registration_number.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :registration_number => {'these' => 'params'}
      end

      it "assigns the requested registration_number as @registration_number" do
        RegistrationNumber.stub(:find) { mock_registration_number(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:registration_number).should be(mock_registration_number)
      end

      it "redirects to the registration_number" do
        RegistrationNumber.stub(:find) { mock_registration_number(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(registration_number_url(mock_registration_number))
      end
    end

    describe "with invalid params" do
      it "assigns the registration_number as @registration_number" do
        RegistrationNumber.stub(:find) { mock_registration_number(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:registration_number).should be(mock_registration_number)
      end

      it "re-renders the 'edit' template" do
        RegistrationNumber.stub(:find) { mock_registration_number(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested registration_number" do
      RegistrationNumber.stub(:find).with("37") { mock_registration_number }
      mock_registration_number.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the registration_numbers list" do
      RegistrationNumber.stub(:find) { mock_registration_number }
      delete :destroy, :id => "1"
      response.should redirect_to(registration_numbers_url)
    end
  end

end
