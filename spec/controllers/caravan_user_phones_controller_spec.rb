require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe CaravanUserPhonesController do

  def mock_caravan_user_phone(stubs={})
    @mock_caravan_user_phone ||= mock_model(CaravanUserPhone, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all caravan_user_phones as @caravan_user_phones" do
      CaravanUserPhone.stub(:all) { [mock_caravan_user_phone] }
      get :index
      assigns(:caravan_user_phones).should eq([mock_caravan_user_phone])
    end
  end

  describe "GET show" do
    it "assigns the requested caravan_user_phone as @caravan_user_phone" do
      CaravanUserPhone.stub(:find).with("37") { mock_caravan_user_phone }
      get :show, :id => "37"
      assigns(:caravan_user_phone).should be(mock_caravan_user_phone)
    end
  end

  describe "GET new" do
    it "assigns a new caravan_user_phone as @caravan_user_phone" do
      CaravanUserPhone.stub(:new) { mock_caravan_user_phone }
      get :new
      assigns(:caravan_user_phone).should be(mock_caravan_user_phone)
    end
  end

  describe "GET edit" do
    it "assigns the requested caravan_user_phone as @caravan_user_phone" do
      CaravanUserPhone.stub(:find).with("37") { mock_caravan_user_phone }
      get :edit, :id => "37"
      assigns(:caravan_user_phone).should be(mock_caravan_user_phone)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created caravan_user_phone as @caravan_user_phone" do
        CaravanUserPhone.stub(:new).with({'these' => 'params'}) { mock_caravan_user_phone(:save => true) }
        post :create, :caravan_user_phone => {'these' => 'params'}
        assigns(:caravan_user_phone).should be(mock_caravan_user_phone)
      end

      it "redirects to the created caravan_user_phone" do
        CaravanUserPhone.stub(:new) { mock_caravan_user_phone(:save => true) }
        post :create, :caravan_user_phone => {}
        response.should redirect_to(caravan_user_phone_url(mock_caravan_user_phone))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved caravan_user_phone as @caravan_user_phone" do
        CaravanUserPhone.stub(:new).with({'these' => 'params'}) { mock_caravan_user_phone(:save => false) }
        post :create, :caravan_user_phone => {'these' => 'params'}
        assigns(:caravan_user_phone).should be(mock_caravan_user_phone)
      end

      it "re-renders the 'new' template" do
        CaravanUserPhone.stub(:new) { mock_caravan_user_phone(:save => false) }
        post :create, :caravan_user_phone => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested caravan_user_phone" do
        CaravanUserPhone.stub(:find).with("37") { mock_caravan_user_phone }
        mock_caravan_user_phone.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :caravan_user_phone => {'these' => 'params'}
      end

      it "assigns the requested caravan_user_phone as @caravan_user_phone" do
        CaravanUserPhone.stub(:find) { mock_caravan_user_phone(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:caravan_user_phone).should be(mock_caravan_user_phone)
      end

      it "redirects to the caravan_user_phone" do
        CaravanUserPhone.stub(:find) { mock_caravan_user_phone(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(caravan_user_phone_url(mock_caravan_user_phone))
      end
    end

    describe "with invalid params" do
      it "assigns the caravan_user_phone as @caravan_user_phone" do
        CaravanUserPhone.stub(:find) { mock_caravan_user_phone(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:caravan_user_phone).should be(mock_caravan_user_phone)
      end

      it "re-renders the 'edit' template" do
        CaravanUserPhone.stub(:find) { mock_caravan_user_phone(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested caravan_user_phone" do
      CaravanUserPhone.stub(:find).with("37") { mock_caravan_user_phone }
      mock_caravan_user_phone.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the caravan_user_phones list" do
      CaravanUserPhone.stub(:find) { mock_caravan_user_phone }
      delete :destroy, :id => "1"
      response.should redirect_to(caravan_user_phones_url)
    end
  end

end
